FROM mcr.microsoft.com/dotnet/core/sdk:3.1-bionic

ARG SONAR_PROJECT_NAME
ARG SONAR_PROJECT_KEY
ARG SONAR_SECURITY_TOKEN
ARG HTTP_PROXY

ENV http_proxy $HTTP_PROXY
ENV https_proxy $HTTP_PROXY
ENV no_proxy localhost,127.0.0.1,sonarqube
ENV PATH "${PATH}:/root/.dotnet/tools"

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get update && \
    apt-get install -y openjdk-11-jre nodejs curl unzip

RUN dotnet tool install --global dotnet-sonarscanner
RUN wget -P /tmp https://dl.bintray.com/jeremy-long/owasp/dependency-check-5.3.0-release.zip && \
    unzip /tmp/dependency-check-5.3.0-release.zip -d /opt

WORKDIR /

ARG CACHEBUST=1

COPY ./Galaxy.Template ./Galaxy.Template
COPY ./SonarQube.Analysis.xml /root/.dotnet/tools/.store/dotnet-sonarscanner/4.8.0/dotnet-sonarscanner/4.8.0/tools/netcoreapp3.0/any/SonarQube.Analysis.xml

RUN dotnet-sonarscanner begin \
    /k:${SONAR_PROJECT_KEY} \
    /n:${SONAR_PROJECT_NAME} \
    /v:"1.0" \
    /d:sonar.verbose=true \
    /d:sonar.dependencyCheck.xmlReportPath=/tmp/dependency-check-report.xml

RUN dotnet restore /Galaxy.Template/src/Galaxy.Template.WebApi.Tests/Galaxy.Template.WebApi.Tests.csproj
RUN dotnet test /Galaxy.Template/src/Galaxy.Template.WebApi.Tests/Galaxy.Template.WebApi.Tests.csproj \
    /p:CollectCoverage=true \
    /p:CoverletOutputFormat=opencover

RUN dotnet restore /Galaxy.Template/src/Galaxy.Template.WebApi/Galaxy.Template.WebApi.csproj

RUN /opt/dependency-check/bin/dependency-check.sh \
    --project Galaxy.Template \
    --scan /Galaxy.Template/src \
    --out /tmp

RUN dotnet publish /Galaxy.Template/src/Galaxy.Template.WebApi/Galaxy.Template.WebApi.csproj \
    -c Release \
    --self-contained false \
    -o /opt/Galaxy.Template.WebApi

RUN dotnet-sonarscanner end
